(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> argument 2 to map() must support iteration"
p3
sS'layer'
p4
S'/Users/sky/Desktop/web2py/applications/pii/controllers/default.py'
p5
sS'code'
p6
S'import json\n\n# -*- coding: utf-8 -*-\n# this file is released under public domain and you can use without limitations\n\n#########################################################################\n## This is a sample controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################\n\ndef tag(s):\n    s = s.replace(\',\', \' , \').replace(\'.\', \' . \')\n    lis = s.split()\n    ret = ""\n    cnt = 1\n    for x in lis:\n        ret += \'<span onclick="pop(\' + str(cnt) + \')" id="\' + str(cnt) + \'" class="words">\' + x + \'</span> \'\n        cnt += 1\n\n    return ret, lis\n\ndef getTweet(): \n    s = "@JohnDoe, this is not a random tweet. #chill #fight"\n    return tag(s)\n\ndef index():\n    tweet, session.tweet = getTweet()\n    \n    return dict(message=XML(tweet))\n\ndef back():\n    lis = json.loads(request.vars.arr)\n    lis.sort()\n    l = map(lis, lambda x: session.tweet[x])\n    print l, lis\n    return  json.dumps({"arr":json.dumps(lis)})\n\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login\n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    http://..../[app]/default/user/manage_users (requires membership in\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n@cache.action()\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request, db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    return service()\n\n\n@auth.requires_signature()\ndef data():\n    """\n    http://..../[app]/default/data/tables\n    http://..../[app]/default/data/create/[table]\n    http://..../[app]/default/data/read/[table]/[id]\n    http://..../[app]/default/data/update/[table]/[id]\n    http://..../[app]/default/data/delete/[table]/[id]\n    http://..../[app]/default/data/select/[table]\n    http://..../[app]/default/data/search/[table]\n    but URLs must be signed, i.e. linked with\n      A(\'table\',_href=URL(\'data/tables\',user_signature=True))\n    or with the signed load operator\n      LOAD(\'default\',\'data.load\',args=\'tables\',ajax=True,user_signature=True)\n    """\n    return dict(form=crud())\n\nresponse._vars=response._caller(back)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/sky/Desktop/web2py/gluon/restricted.py", line 217, in restricted\n    exec ccode in environment\n  File "/Users/sky/Desktop/web2py/applications/pii/controllers/default.py", line 96, in <module>\n  File "/Users/sky/Desktop/web2py/gluon/globals.py", line 372, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/sky/Desktop/web2py/applications/pii/controllers/default.py", line 37, in back\n    l = map(lis, lambda x: session.tweet[x])\nTypeError: argument 2 to map() must support iteration\n'
p11
s.